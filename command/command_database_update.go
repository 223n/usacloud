// Code generated by 'github.com/sacloud/usacloud/tools/gen-command-funcs'; DO NOT EDIT

package command

import (
	"fmt"
)

func DatabaseUpdate(ctx Context, params *UpdateDatabaseParam) error {

	client := ctx.GetAPIClient()
	api := client.GetDatabaseAPI()
	p, e := api.Read(params.Id)
	if e != nil {
		return fmt.Errorf("DatabaseUpdate is failed: %s", e)
	}

	if ctx.IsSet("description") {
		p.SetDescription(params.Description)
	}
	if ctx.IsSet("icon-id") {
		p.SetIconByID(params.IconId)
	}
	if ctx.IsSet("name") {
		p.SetName(params.Name)
	}
	if ctx.IsSet("tags") {
		p.SetTags(params.Tags)
	}

	// update
	p, err := api.Update(params.Id, p)
	if err != nil {
		return fmt.Errorf("DatabaseUpdate is failed: %s", err)
	}

	// is need apply config?
	isNeedApplyConfig := false
	configTargets := []string{"password", "port", "source-networks", "enable-web-ui", "backup-time"}
	for _, t := range configTargets {
		if ctx.IsSet(t) {
			isNeedApplyConfig = true
			break
		}
	}

	// set params
	if ctx.IsSet("password") {
		p.Settings.DBConf.Common.UserPassword = params.Password
	}
	if ctx.IsSet("port") {
		p.Settings.DBConf.Common.ServicePort = fmt.Sprintf("%d", params.Port)
	}
	if ctx.IsSet("source-networks") {
		p.Settings.DBConf.Common.SourceNetwork = params.SourceNetworks
	}
	if ctx.IsSet("enable-web-ui") {
		p.Settings.DBConf.Common.WebUI = params.EnableWebUi
	}
	if ctx.IsSet("backup-time") {
		p.Settings.DBConf.Backup.Time = params.BackupTime
	}

	if isNeedApplyConfig {
		_, err = api.UpdateSetting(params.Id, p)
		if err != nil {
			return fmt.Errorf("DatabaseUpdate is failed: %s", err)
		}
		_, err = api.Config(params.Id)
		if err != nil {
			return fmt.Errorf("DatabaseUpdate is failed: %s", err)
		}
	}

	// read again
	p, e = api.Read(params.Id)
	if e != nil {
		return fmt.Errorf("DatabaseUpdate is failed: %s", e)
	}
	return ctx.GetOutput().Print(p)

}
