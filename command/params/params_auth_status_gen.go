// Code generated by 'github.com/sacloud/usacloud/tools/gen-input-models'; DO NOT EDIT

package params

import (
	"github.com/sacloud/usacloud/define"
	"github.com/sacloud/usacloud/output"
	"github.com/sacloud/usacloud/schema"
)

// ShowAuthStatusParam is input parameters for the sacloud API
type ShowAuthStatusParam struct {
	OutputType string
	Column     []string
	Quiet      bool
	Format     string
	FormatFile string
}

// NewShowAuthStatusParam return new ShowAuthStatusParam
func NewShowAuthStatusParam() *ShowAuthStatusParam {
	return &ShowAuthStatusParam{}
}

// Validate checks current values in model
func (p *ShowAuthStatusParam) Validate() []error {
	errors := []error{}

	{
		validator := schema.ValidateInStrValues("json", "csv", "tsv")
		errs := validator("--output-type", p.OutputType)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		errs := validateOutputOption(p)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *ShowAuthStatusParam) GetResourceDef() *schema.Resource {
	return define.Resources["AuthStatus"]
}

func (p *ShowAuthStatusParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["show"]
}

func (p *ShowAuthStatusParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *ShowAuthStatusParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *ShowAuthStatusParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *ShowAuthStatusParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *ShowAuthStatusParam) GetOutputFormat() string {
	return "table"
}

func (p *ShowAuthStatusParam) SetOutputType(v string) {
	p.OutputType = v
}

func (p *ShowAuthStatusParam) GetOutputType() string {
	return p.OutputType
}
func (p *ShowAuthStatusParam) SetColumn(v []string) {
	p.Column = v
}

func (p *ShowAuthStatusParam) GetColumn() []string {
	return p.Column
}
func (p *ShowAuthStatusParam) SetQuiet(v bool) {
	p.Quiet = v
}

func (p *ShowAuthStatusParam) GetQuiet() bool {
	return p.Quiet
}
func (p *ShowAuthStatusParam) SetFormat(v string) {
	p.Format = v
}

func (p *ShowAuthStatusParam) GetFormat() string {
	return p.Format
}
func (p *ShowAuthStatusParam) SetFormatFile(v string) {
	p.FormatFile = v
}

func (p *ShowAuthStatusParam) GetFormatFile() string {
	return p.FormatFile
}
