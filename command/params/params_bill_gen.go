// Code generated by 'github.com/sacloud/usacloud/tools/gen-input-models'; DO NOT EDIT

package params

import (
	"github.com/sacloud/usacloud/define"
	"github.com/sacloud/usacloud/output"
	"github.com/sacloud/usacloud/schema"
)

// CsvBillParam is input parameters for the sacloud API
type CsvBillParam struct {
	NoHeader   bool
	BillOutput string
	Id         int64
}

// NewCsvBillParam return new CsvBillParam
func NewCsvBillParam() *CsvBillParam {
	return &CsvBillParam{}
}

// Validate checks current values in model
func (p *CsvBillParam) Validate() []error {
	errors := []error{}
	{
		validator := validateRequired
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["Bill"].Commands["csv"].Params["id"].ValidateFunc
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *CsvBillParam) GetResourceDef() *schema.Resource {
	return define.Resources["Bill"]
}

func (p *CsvBillParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["csv"]
}

func (p *CsvBillParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *CsvBillParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *CsvBillParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *CsvBillParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *CsvBillParam) GetOutputFormat() string {
	return "table"
}

func (p *CsvBillParam) SetNoHeader(v bool) {
	p.NoHeader = v
}

func (p *CsvBillParam) GetNoHeader() bool {
	return p.NoHeader
}
func (p *CsvBillParam) SetBillOutput(v string) {
	p.BillOutput = v
}

func (p *CsvBillParam) GetBillOutput() string {
	return p.BillOutput
}
func (p *CsvBillParam) SetId(v int64) {
	p.Id = v
}

func (p *CsvBillParam) GetId() int64 {
	return p.Id
}

// ListBillParam is input parameters for the sacloud API
type ListBillParam struct {
	Year       int
	Month      int
	OutputType string
	Column     []string
	Quiet      bool
	Format     string
	FormatFile string
}

// NewListBillParam return new ListBillParam
func NewListBillParam() *ListBillParam {
	return &ListBillParam{}
}

// Validate checks current values in model
func (p *ListBillParam) Validate() []error {
	errors := []error{}
	{
		validator := define.Resources["Bill"].Commands["list"].Params["year"].ValidateFunc
		errs := validator("--year", p.Year)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["Bill"].Commands["list"].Params["month"].ValidateFunc
		errs := validator("--month", p.Month)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := schema.ValidateInStrValues("json", "csv", "tsv")
		errs := validator("--output-type", p.OutputType)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		errs := validateOutputOption(p)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *ListBillParam) GetResourceDef() *schema.Resource {
	return define.Resources["Bill"]
}

func (p *ListBillParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["list"]
}

func (p *ListBillParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *ListBillParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *ListBillParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *ListBillParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *ListBillParam) GetOutputFormat() string {
	return "table"
}

func (p *ListBillParam) SetYear(v int) {
	p.Year = v
}

func (p *ListBillParam) GetYear() int {
	return p.Year
}
func (p *ListBillParam) SetMonth(v int) {
	p.Month = v
}

func (p *ListBillParam) GetMonth() int {
	return p.Month
}
func (p *ListBillParam) SetOutputType(v string) {
	p.OutputType = v
}

func (p *ListBillParam) GetOutputType() string {
	return p.OutputType
}
func (p *ListBillParam) SetColumn(v []string) {
	p.Column = v
}

func (p *ListBillParam) GetColumn() []string {
	return p.Column
}
func (p *ListBillParam) SetQuiet(v bool) {
	p.Quiet = v
}

func (p *ListBillParam) GetQuiet() bool {
	return p.Quiet
}
func (p *ListBillParam) SetFormat(v string) {
	p.Format = v
}

func (p *ListBillParam) GetFormat() string {
	return p.Format
}
func (p *ListBillParam) SetFormatFile(v string) {
	p.FormatFile = v
}

func (p *ListBillParam) GetFormatFile() string {
	return p.FormatFile
}
