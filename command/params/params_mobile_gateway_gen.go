// Code generated by 'github.com/sacloud/usacloud/tools/gen-input-models'; DO NOT EDIT

package params

import (
	"github.com/sacloud/usacloud/define"
	"github.com/sacloud/usacloud/output"
	"github.com/sacloud/usacloud/schema"
)

// ListMobileGatewayParam is input parameters for the sacloud API
type ListMobileGatewayParam struct {
	Name              []string `json:"name"`
	Id                []int64  `json:"id"`
	Tags              []string `json:"tags"`
	From              int      `json:"from"`
	Max               int      `json:"max"`
	Sort              []string `json:"sort"`
	ParamTemplate     string   `json:"param-template"`
	ParamTemplateFile string   `json:"param-template-file"`
	GenerateSkeleton  bool     `json:"generate-skeleton"`
	OutputType        string   `json:"output-type"`
	Column            []string `json:"column"`
	Quiet             bool     `json:"quiet"`
	Format            string   `json:"format"`
	FormatFile        string   `json:"format-file"`
	Query             string   `json:"query"`
}

// NewListMobileGatewayParam return new ListMobileGatewayParam
func NewListMobileGatewayParam() *ListMobileGatewayParam {
	return &ListMobileGatewayParam{}
}

// FillValueToSkeleton fill values to empty fields
func (p *ListMobileGatewayParam) FillValueToSkeleton() {
	if isEmpty(p.Name) {
		p.Name = []string{""}
	}
	if isEmpty(p.Id) {
		p.Id = []int64{0}
	}
	if isEmpty(p.Tags) {
		p.Tags = []string{""}
	}
	if isEmpty(p.From) {
		p.From = 0
	}
	if isEmpty(p.Max) {
		p.Max = 0
	}
	if isEmpty(p.Sort) {
		p.Sort = []string{""}
	}
	if isEmpty(p.ParamTemplate) {
		p.ParamTemplate = ""
	}
	if isEmpty(p.ParamTemplateFile) {
		p.ParamTemplateFile = ""
	}
	if isEmpty(p.GenerateSkeleton) {
		p.GenerateSkeleton = false
	}
	if isEmpty(p.OutputType) {
		p.OutputType = ""
	}
	if isEmpty(p.Column) {
		p.Column = []string{""}
	}
	if isEmpty(p.Quiet) {
		p.Quiet = false
	}
	if isEmpty(p.Format) {
		p.Format = ""
	}
	if isEmpty(p.FormatFile) {
		p.FormatFile = ""
	}
	if isEmpty(p.Query) {
		p.Query = ""
	}

}

// Validate checks current values in model
func (p *ListMobileGatewayParam) Validate() []error {
	errors := []error{}
	{
		errs := validateConflicts("--name", p.Name, map[string]interface{}{

			"--id": p.Id,
		})
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["list"].Params["id"].ValidateFunc
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		errs := validateConflicts("--id", p.Id, map[string]interface{}{

			"--name": p.Name,
		})
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["list"].Params["tags"].ValidateFunc
		errs := validator("--tags", p.Tags)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := schema.ValidateInStrValues(define.AllowOutputTypes...)
		errs := validator("--output-type", p.OutputType)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		errs := validateInputOption(p)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		errs := validateOutputOption(p)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *ListMobileGatewayParam) GetResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *ListMobileGatewayParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["list"]
}

func (p *ListMobileGatewayParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *ListMobileGatewayParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *ListMobileGatewayParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *ListMobileGatewayParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *ListMobileGatewayParam) SetName(v []string) {
	p.Name = v
}

func (p *ListMobileGatewayParam) GetName() []string {
	return p.Name
}
func (p *ListMobileGatewayParam) SetId(v []int64) {
	p.Id = v
}

func (p *ListMobileGatewayParam) GetId() []int64 {
	return p.Id
}
func (p *ListMobileGatewayParam) SetTags(v []string) {
	p.Tags = v
}

func (p *ListMobileGatewayParam) GetTags() []string {
	return p.Tags
}
func (p *ListMobileGatewayParam) SetFrom(v int) {
	p.From = v
}

func (p *ListMobileGatewayParam) GetFrom() int {
	return p.From
}
func (p *ListMobileGatewayParam) SetMax(v int) {
	p.Max = v
}

func (p *ListMobileGatewayParam) GetMax() int {
	return p.Max
}
func (p *ListMobileGatewayParam) SetSort(v []string) {
	p.Sort = v
}

func (p *ListMobileGatewayParam) GetSort() []string {
	return p.Sort
}
func (p *ListMobileGatewayParam) SetParamTemplate(v string) {
	p.ParamTemplate = v
}

func (p *ListMobileGatewayParam) GetParamTemplate() string {
	return p.ParamTemplate
}
func (p *ListMobileGatewayParam) SetParamTemplateFile(v string) {
	p.ParamTemplateFile = v
}

func (p *ListMobileGatewayParam) GetParamTemplateFile() string {
	return p.ParamTemplateFile
}
func (p *ListMobileGatewayParam) SetGenerateSkeleton(v bool) {
	p.GenerateSkeleton = v
}

func (p *ListMobileGatewayParam) GetGenerateSkeleton() bool {
	return p.GenerateSkeleton
}
func (p *ListMobileGatewayParam) SetOutputType(v string) {
	p.OutputType = v
}

func (p *ListMobileGatewayParam) GetOutputType() string {
	return p.OutputType
}
func (p *ListMobileGatewayParam) SetColumn(v []string) {
	p.Column = v
}

func (p *ListMobileGatewayParam) GetColumn() []string {
	return p.Column
}
func (p *ListMobileGatewayParam) SetQuiet(v bool) {
	p.Quiet = v
}

func (p *ListMobileGatewayParam) GetQuiet() bool {
	return p.Quiet
}
func (p *ListMobileGatewayParam) SetFormat(v string) {
	p.Format = v
}

func (p *ListMobileGatewayParam) GetFormat() string {
	return p.Format
}
func (p *ListMobileGatewayParam) SetFormatFile(v string) {
	p.FormatFile = v
}

func (p *ListMobileGatewayParam) GetFormatFile() string {
	return p.FormatFile
}
func (p *ListMobileGatewayParam) SetQuery(v string) {
	p.Query = v
}

func (p *ListMobileGatewayParam) GetQuery() string {
	return p.Query
}

// CreateMobileGatewayParam is input parameters for the sacloud API
type CreateMobileGatewayParam struct {
	InternetConnection bool     `json:"internet-connection"`
	Name               string   `json:"name"`
	Description        string   `json:"description"`
	Tags               []string `json:"tags"`
	IconId             int64    `json:"icon-id"`
	Assumeyes          bool     `json:"assumeyes"`
	ParamTemplate      string   `json:"param-template"`
	ParamTemplateFile  string   `json:"param-template-file"`
	GenerateSkeleton   bool     `json:"generate-skeleton"`
	OutputType         string   `json:"output-type"`
	Column             []string `json:"column"`
	Quiet              bool     `json:"quiet"`
	Format             string   `json:"format"`
	FormatFile         string   `json:"format-file"`
	Query              string   `json:"query"`
}

// NewCreateMobileGatewayParam return new CreateMobileGatewayParam
func NewCreateMobileGatewayParam() *CreateMobileGatewayParam {
	return &CreateMobileGatewayParam{}
}

// FillValueToSkeleton fill values to empty fields
func (p *CreateMobileGatewayParam) FillValueToSkeleton() {
	if isEmpty(p.InternetConnection) {
		p.InternetConnection = false
	}
	if isEmpty(p.Name) {
		p.Name = ""
	}
	if isEmpty(p.Description) {
		p.Description = ""
	}
	if isEmpty(p.Tags) {
		p.Tags = []string{""}
	}
	if isEmpty(p.IconId) {
		p.IconId = 0
	}
	if isEmpty(p.Assumeyes) {
		p.Assumeyes = false
	}
	if isEmpty(p.ParamTemplate) {
		p.ParamTemplate = ""
	}
	if isEmpty(p.ParamTemplateFile) {
		p.ParamTemplateFile = ""
	}
	if isEmpty(p.GenerateSkeleton) {
		p.GenerateSkeleton = false
	}
	if isEmpty(p.OutputType) {
		p.OutputType = ""
	}
	if isEmpty(p.Column) {
		p.Column = []string{""}
	}
	if isEmpty(p.Quiet) {
		p.Quiet = false
	}
	if isEmpty(p.Format) {
		p.Format = ""
	}
	if isEmpty(p.FormatFile) {
		p.FormatFile = ""
	}
	if isEmpty(p.Query) {
		p.Query = ""
	}

}

// Validate checks current values in model
func (p *CreateMobileGatewayParam) Validate() []error {
	errors := []error{}
	{
		validator := validateRequired
		errs := validator("--name", p.Name)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["create"].Params["name"].ValidateFunc
		errs := validator("--name", p.Name)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["create"].Params["description"].ValidateFunc
		errs := validator("--description", p.Description)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["create"].Params["tags"].ValidateFunc
		errs := validator("--tags", p.Tags)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["create"].Params["icon-id"].ValidateFunc
		errs := validator("--icon-id", p.IconId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := schema.ValidateInStrValues(define.AllowOutputTypes...)
		errs := validator("--output-type", p.OutputType)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		errs := validateInputOption(p)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		errs := validateOutputOption(p)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *CreateMobileGatewayParam) GetResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *CreateMobileGatewayParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["create"]
}

func (p *CreateMobileGatewayParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *CreateMobileGatewayParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *CreateMobileGatewayParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *CreateMobileGatewayParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *CreateMobileGatewayParam) SetInternetConnection(v bool) {
	p.InternetConnection = v
}

func (p *CreateMobileGatewayParam) GetInternetConnection() bool {
	return p.InternetConnection
}
func (p *CreateMobileGatewayParam) SetName(v string) {
	p.Name = v
}

func (p *CreateMobileGatewayParam) GetName() string {
	return p.Name
}
func (p *CreateMobileGatewayParam) SetDescription(v string) {
	p.Description = v
}

func (p *CreateMobileGatewayParam) GetDescription() string {
	return p.Description
}
func (p *CreateMobileGatewayParam) SetTags(v []string) {
	p.Tags = v
}

func (p *CreateMobileGatewayParam) GetTags() []string {
	return p.Tags
}
func (p *CreateMobileGatewayParam) SetIconId(v int64) {
	p.IconId = v
}

func (p *CreateMobileGatewayParam) GetIconId() int64 {
	return p.IconId
}
func (p *CreateMobileGatewayParam) SetAssumeyes(v bool) {
	p.Assumeyes = v
}

func (p *CreateMobileGatewayParam) GetAssumeyes() bool {
	return p.Assumeyes
}
func (p *CreateMobileGatewayParam) SetParamTemplate(v string) {
	p.ParamTemplate = v
}

func (p *CreateMobileGatewayParam) GetParamTemplate() string {
	return p.ParamTemplate
}
func (p *CreateMobileGatewayParam) SetParamTemplateFile(v string) {
	p.ParamTemplateFile = v
}

func (p *CreateMobileGatewayParam) GetParamTemplateFile() string {
	return p.ParamTemplateFile
}
func (p *CreateMobileGatewayParam) SetGenerateSkeleton(v bool) {
	p.GenerateSkeleton = v
}

func (p *CreateMobileGatewayParam) GetGenerateSkeleton() bool {
	return p.GenerateSkeleton
}
func (p *CreateMobileGatewayParam) SetOutputType(v string) {
	p.OutputType = v
}

func (p *CreateMobileGatewayParam) GetOutputType() string {
	return p.OutputType
}
func (p *CreateMobileGatewayParam) SetColumn(v []string) {
	p.Column = v
}

func (p *CreateMobileGatewayParam) GetColumn() []string {
	return p.Column
}
func (p *CreateMobileGatewayParam) SetQuiet(v bool) {
	p.Quiet = v
}

func (p *CreateMobileGatewayParam) GetQuiet() bool {
	return p.Quiet
}
func (p *CreateMobileGatewayParam) SetFormat(v string) {
	p.Format = v
}

func (p *CreateMobileGatewayParam) GetFormat() string {
	return p.Format
}
func (p *CreateMobileGatewayParam) SetFormatFile(v string) {
	p.FormatFile = v
}

func (p *CreateMobileGatewayParam) GetFormatFile() string {
	return p.FormatFile
}
func (p *CreateMobileGatewayParam) SetQuery(v string) {
	p.Query = v
}

func (p *CreateMobileGatewayParam) GetQuery() string {
	return p.Query
}

// ReadMobileGatewayParam is input parameters for the sacloud API
type ReadMobileGatewayParam struct {
	Selector          []string `json:"selector"`
	ParamTemplate     string   `json:"param-template"`
	ParamTemplateFile string   `json:"param-template-file"`
	GenerateSkeleton  bool     `json:"generate-skeleton"`
	OutputType        string   `json:"output-type"`
	Column            []string `json:"column"`
	Quiet             bool     `json:"quiet"`
	Format            string   `json:"format"`
	FormatFile        string   `json:"format-file"`
	Query             string   `json:"query"`
	Id                int64    `json:"id"`
}

// NewReadMobileGatewayParam return new ReadMobileGatewayParam
func NewReadMobileGatewayParam() *ReadMobileGatewayParam {
	return &ReadMobileGatewayParam{}
}

// FillValueToSkeleton fill values to empty fields
func (p *ReadMobileGatewayParam) FillValueToSkeleton() {
	if isEmpty(p.Selector) {
		p.Selector = []string{""}
	}
	if isEmpty(p.ParamTemplate) {
		p.ParamTemplate = ""
	}
	if isEmpty(p.ParamTemplateFile) {
		p.ParamTemplateFile = ""
	}
	if isEmpty(p.GenerateSkeleton) {
		p.GenerateSkeleton = false
	}
	if isEmpty(p.OutputType) {
		p.OutputType = ""
	}
	if isEmpty(p.Column) {
		p.Column = []string{""}
	}
	if isEmpty(p.Quiet) {
		p.Quiet = false
	}
	if isEmpty(p.Format) {
		p.Format = ""
	}
	if isEmpty(p.FormatFile) {
		p.FormatFile = ""
	}
	if isEmpty(p.Query) {
		p.Query = ""
	}
	if isEmpty(p.Id) {
		p.Id = 0
	}

}

// Validate checks current values in model
func (p *ReadMobileGatewayParam) Validate() []error {
	errors := []error{}
	{
		validator := validateSakuraID
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := schema.ValidateInStrValues(define.AllowOutputTypes...)
		errs := validator("--output-type", p.OutputType)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		errs := validateInputOption(p)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		errs := validateOutputOption(p)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *ReadMobileGatewayParam) GetResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *ReadMobileGatewayParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["read"]
}

func (p *ReadMobileGatewayParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *ReadMobileGatewayParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *ReadMobileGatewayParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *ReadMobileGatewayParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *ReadMobileGatewayParam) SetSelector(v []string) {
	p.Selector = v
}

func (p *ReadMobileGatewayParam) GetSelector() []string {
	return p.Selector
}
func (p *ReadMobileGatewayParam) SetParamTemplate(v string) {
	p.ParamTemplate = v
}

func (p *ReadMobileGatewayParam) GetParamTemplate() string {
	return p.ParamTemplate
}
func (p *ReadMobileGatewayParam) SetParamTemplateFile(v string) {
	p.ParamTemplateFile = v
}

func (p *ReadMobileGatewayParam) GetParamTemplateFile() string {
	return p.ParamTemplateFile
}
func (p *ReadMobileGatewayParam) SetGenerateSkeleton(v bool) {
	p.GenerateSkeleton = v
}

func (p *ReadMobileGatewayParam) GetGenerateSkeleton() bool {
	return p.GenerateSkeleton
}
func (p *ReadMobileGatewayParam) SetOutputType(v string) {
	p.OutputType = v
}

func (p *ReadMobileGatewayParam) GetOutputType() string {
	return p.OutputType
}
func (p *ReadMobileGatewayParam) SetColumn(v []string) {
	p.Column = v
}

func (p *ReadMobileGatewayParam) GetColumn() []string {
	return p.Column
}
func (p *ReadMobileGatewayParam) SetQuiet(v bool) {
	p.Quiet = v
}

func (p *ReadMobileGatewayParam) GetQuiet() bool {
	return p.Quiet
}
func (p *ReadMobileGatewayParam) SetFormat(v string) {
	p.Format = v
}

func (p *ReadMobileGatewayParam) GetFormat() string {
	return p.Format
}
func (p *ReadMobileGatewayParam) SetFormatFile(v string) {
	p.FormatFile = v
}

func (p *ReadMobileGatewayParam) GetFormatFile() string {
	return p.FormatFile
}
func (p *ReadMobileGatewayParam) SetQuery(v string) {
	p.Query = v
}

func (p *ReadMobileGatewayParam) GetQuery() string {
	return p.Query
}
func (p *ReadMobileGatewayParam) SetId(v int64) {
	p.Id = v
}

func (p *ReadMobileGatewayParam) GetId() int64 {
	return p.Id
}

// UpdateMobileGatewayParam is input parameters for the sacloud API
type UpdateMobileGatewayParam struct {
	InternetConnection bool     `json:"internet-connection"`
	Selector           []string `json:"selector"`
	Name               string   `json:"name"`
	Description        string   `json:"description"`
	Tags               []string `json:"tags"`
	IconId             int64    `json:"icon-id"`
	Assumeyes          bool     `json:"assumeyes"`
	ParamTemplate      string   `json:"param-template"`
	ParamTemplateFile  string   `json:"param-template-file"`
	GenerateSkeleton   bool     `json:"generate-skeleton"`
	OutputType         string   `json:"output-type"`
	Column             []string `json:"column"`
	Quiet              bool     `json:"quiet"`
	Format             string   `json:"format"`
	FormatFile         string   `json:"format-file"`
	Query              string   `json:"query"`
	Id                 int64    `json:"id"`
}

// NewUpdateMobileGatewayParam return new UpdateMobileGatewayParam
func NewUpdateMobileGatewayParam() *UpdateMobileGatewayParam {
	return &UpdateMobileGatewayParam{}
}

// FillValueToSkeleton fill values to empty fields
func (p *UpdateMobileGatewayParam) FillValueToSkeleton() {
	if isEmpty(p.InternetConnection) {
		p.InternetConnection = false
	}
	if isEmpty(p.Selector) {
		p.Selector = []string{""}
	}
	if isEmpty(p.Name) {
		p.Name = ""
	}
	if isEmpty(p.Description) {
		p.Description = ""
	}
	if isEmpty(p.Tags) {
		p.Tags = []string{""}
	}
	if isEmpty(p.IconId) {
		p.IconId = 0
	}
	if isEmpty(p.Assumeyes) {
		p.Assumeyes = false
	}
	if isEmpty(p.ParamTemplate) {
		p.ParamTemplate = ""
	}
	if isEmpty(p.ParamTemplateFile) {
		p.ParamTemplateFile = ""
	}
	if isEmpty(p.GenerateSkeleton) {
		p.GenerateSkeleton = false
	}
	if isEmpty(p.OutputType) {
		p.OutputType = ""
	}
	if isEmpty(p.Column) {
		p.Column = []string{""}
	}
	if isEmpty(p.Quiet) {
		p.Quiet = false
	}
	if isEmpty(p.Format) {
		p.Format = ""
	}
	if isEmpty(p.FormatFile) {
		p.FormatFile = ""
	}
	if isEmpty(p.Query) {
		p.Query = ""
	}
	if isEmpty(p.Id) {
		p.Id = 0
	}

}

// Validate checks current values in model
func (p *UpdateMobileGatewayParam) Validate() []error {
	errors := []error{}
	{
		validator := define.Resources["MobileGateway"].Commands["update"].Params["name"].ValidateFunc
		errs := validator("--name", p.Name)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["update"].Params["description"].ValidateFunc
		errs := validator("--description", p.Description)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["update"].Params["tags"].ValidateFunc
		errs := validator("--tags", p.Tags)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["update"].Params["icon-id"].ValidateFunc
		errs := validator("--icon-id", p.IconId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := validateSakuraID
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := schema.ValidateInStrValues(define.AllowOutputTypes...)
		errs := validator("--output-type", p.OutputType)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		errs := validateInputOption(p)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		errs := validateOutputOption(p)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *UpdateMobileGatewayParam) GetResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *UpdateMobileGatewayParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["update"]
}

func (p *UpdateMobileGatewayParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *UpdateMobileGatewayParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *UpdateMobileGatewayParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *UpdateMobileGatewayParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *UpdateMobileGatewayParam) SetInternetConnection(v bool) {
	p.InternetConnection = v
}

func (p *UpdateMobileGatewayParam) GetInternetConnection() bool {
	return p.InternetConnection
}
func (p *UpdateMobileGatewayParam) SetSelector(v []string) {
	p.Selector = v
}

func (p *UpdateMobileGatewayParam) GetSelector() []string {
	return p.Selector
}
func (p *UpdateMobileGatewayParam) SetName(v string) {
	p.Name = v
}

func (p *UpdateMobileGatewayParam) GetName() string {
	return p.Name
}
func (p *UpdateMobileGatewayParam) SetDescription(v string) {
	p.Description = v
}

func (p *UpdateMobileGatewayParam) GetDescription() string {
	return p.Description
}
func (p *UpdateMobileGatewayParam) SetTags(v []string) {
	p.Tags = v
}

func (p *UpdateMobileGatewayParam) GetTags() []string {
	return p.Tags
}
func (p *UpdateMobileGatewayParam) SetIconId(v int64) {
	p.IconId = v
}

func (p *UpdateMobileGatewayParam) GetIconId() int64 {
	return p.IconId
}
func (p *UpdateMobileGatewayParam) SetAssumeyes(v bool) {
	p.Assumeyes = v
}

func (p *UpdateMobileGatewayParam) GetAssumeyes() bool {
	return p.Assumeyes
}
func (p *UpdateMobileGatewayParam) SetParamTemplate(v string) {
	p.ParamTemplate = v
}

func (p *UpdateMobileGatewayParam) GetParamTemplate() string {
	return p.ParamTemplate
}
func (p *UpdateMobileGatewayParam) SetParamTemplateFile(v string) {
	p.ParamTemplateFile = v
}

func (p *UpdateMobileGatewayParam) GetParamTemplateFile() string {
	return p.ParamTemplateFile
}
func (p *UpdateMobileGatewayParam) SetGenerateSkeleton(v bool) {
	p.GenerateSkeleton = v
}

func (p *UpdateMobileGatewayParam) GetGenerateSkeleton() bool {
	return p.GenerateSkeleton
}
func (p *UpdateMobileGatewayParam) SetOutputType(v string) {
	p.OutputType = v
}

func (p *UpdateMobileGatewayParam) GetOutputType() string {
	return p.OutputType
}
func (p *UpdateMobileGatewayParam) SetColumn(v []string) {
	p.Column = v
}

func (p *UpdateMobileGatewayParam) GetColumn() []string {
	return p.Column
}
func (p *UpdateMobileGatewayParam) SetQuiet(v bool) {
	p.Quiet = v
}

func (p *UpdateMobileGatewayParam) GetQuiet() bool {
	return p.Quiet
}
func (p *UpdateMobileGatewayParam) SetFormat(v string) {
	p.Format = v
}

func (p *UpdateMobileGatewayParam) GetFormat() string {
	return p.Format
}
func (p *UpdateMobileGatewayParam) SetFormatFile(v string) {
	p.FormatFile = v
}

func (p *UpdateMobileGatewayParam) GetFormatFile() string {
	return p.FormatFile
}
func (p *UpdateMobileGatewayParam) SetQuery(v string) {
	p.Query = v
}

func (p *UpdateMobileGatewayParam) GetQuery() string {
	return p.Query
}
func (p *UpdateMobileGatewayParam) SetId(v int64) {
	p.Id = v
}

func (p *UpdateMobileGatewayParam) GetId() int64 {
	return p.Id
}

// DeleteMobileGatewayParam is input parameters for the sacloud API
type DeleteMobileGatewayParam struct {
	Force             bool     `json:"force"`
	Selector          []string `json:"selector"`
	Assumeyes         bool     `json:"assumeyes"`
	ParamTemplate     string   `json:"param-template"`
	ParamTemplateFile string   `json:"param-template-file"`
	GenerateSkeleton  bool     `json:"generate-skeleton"`
	OutputType        string   `json:"output-type"`
	Column            []string `json:"column"`
	Quiet             bool     `json:"quiet"`
	Format            string   `json:"format"`
	FormatFile        string   `json:"format-file"`
	Query             string   `json:"query"`
	Id                int64    `json:"id"`
}

// NewDeleteMobileGatewayParam return new DeleteMobileGatewayParam
func NewDeleteMobileGatewayParam() *DeleteMobileGatewayParam {
	return &DeleteMobileGatewayParam{}
}

// FillValueToSkeleton fill values to empty fields
func (p *DeleteMobileGatewayParam) FillValueToSkeleton() {
	if isEmpty(p.Force) {
		p.Force = false
	}
	if isEmpty(p.Selector) {
		p.Selector = []string{""}
	}
	if isEmpty(p.Assumeyes) {
		p.Assumeyes = false
	}
	if isEmpty(p.ParamTemplate) {
		p.ParamTemplate = ""
	}
	if isEmpty(p.ParamTemplateFile) {
		p.ParamTemplateFile = ""
	}
	if isEmpty(p.GenerateSkeleton) {
		p.GenerateSkeleton = false
	}
	if isEmpty(p.OutputType) {
		p.OutputType = ""
	}
	if isEmpty(p.Column) {
		p.Column = []string{""}
	}
	if isEmpty(p.Quiet) {
		p.Quiet = false
	}
	if isEmpty(p.Format) {
		p.Format = ""
	}
	if isEmpty(p.FormatFile) {
		p.FormatFile = ""
	}
	if isEmpty(p.Query) {
		p.Query = ""
	}
	if isEmpty(p.Id) {
		p.Id = 0
	}

}

// Validate checks current values in model
func (p *DeleteMobileGatewayParam) Validate() []error {
	errors := []error{}
	{
		validator := validateSakuraID
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := schema.ValidateInStrValues(define.AllowOutputTypes...)
		errs := validator("--output-type", p.OutputType)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		errs := validateInputOption(p)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		errs := validateOutputOption(p)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *DeleteMobileGatewayParam) GetResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *DeleteMobileGatewayParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["delete"]
}

func (p *DeleteMobileGatewayParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *DeleteMobileGatewayParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *DeleteMobileGatewayParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *DeleteMobileGatewayParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *DeleteMobileGatewayParam) SetForce(v bool) {
	p.Force = v
}

func (p *DeleteMobileGatewayParam) GetForce() bool {
	return p.Force
}
func (p *DeleteMobileGatewayParam) SetSelector(v []string) {
	p.Selector = v
}

func (p *DeleteMobileGatewayParam) GetSelector() []string {
	return p.Selector
}
func (p *DeleteMobileGatewayParam) SetAssumeyes(v bool) {
	p.Assumeyes = v
}

func (p *DeleteMobileGatewayParam) GetAssumeyes() bool {
	return p.Assumeyes
}
func (p *DeleteMobileGatewayParam) SetParamTemplate(v string) {
	p.ParamTemplate = v
}

func (p *DeleteMobileGatewayParam) GetParamTemplate() string {
	return p.ParamTemplate
}
func (p *DeleteMobileGatewayParam) SetParamTemplateFile(v string) {
	p.ParamTemplateFile = v
}

func (p *DeleteMobileGatewayParam) GetParamTemplateFile() string {
	return p.ParamTemplateFile
}
func (p *DeleteMobileGatewayParam) SetGenerateSkeleton(v bool) {
	p.GenerateSkeleton = v
}

func (p *DeleteMobileGatewayParam) GetGenerateSkeleton() bool {
	return p.GenerateSkeleton
}
func (p *DeleteMobileGatewayParam) SetOutputType(v string) {
	p.OutputType = v
}

func (p *DeleteMobileGatewayParam) GetOutputType() string {
	return p.OutputType
}
func (p *DeleteMobileGatewayParam) SetColumn(v []string) {
	p.Column = v
}

func (p *DeleteMobileGatewayParam) GetColumn() []string {
	return p.Column
}
func (p *DeleteMobileGatewayParam) SetQuiet(v bool) {
	p.Quiet = v
}

func (p *DeleteMobileGatewayParam) GetQuiet() bool {
	return p.Quiet
}
func (p *DeleteMobileGatewayParam) SetFormat(v string) {
	p.Format = v
}

func (p *DeleteMobileGatewayParam) GetFormat() string {
	return p.Format
}
func (p *DeleteMobileGatewayParam) SetFormatFile(v string) {
	p.FormatFile = v
}

func (p *DeleteMobileGatewayParam) GetFormatFile() string {
	return p.FormatFile
}
func (p *DeleteMobileGatewayParam) SetQuery(v string) {
	p.Query = v
}

func (p *DeleteMobileGatewayParam) GetQuery() string {
	return p.Query
}
func (p *DeleteMobileGatewayParam) SetId(v int64) {
	p.Id = v
}

func (p *DeleteMobileGatewayParam) GetId() int64 {
	return p.Id
}

// BootMobileGatewayParam is input parameters for the sacloud API
type BootMobileGatewayParam struct {
	Selector          []string `json:"selector"`
	Assumeyes         bool     `json:"assumeyes"`
	ParamTemplate     string   `json:"param-template"`
	ParamTemplateFile string   `json:"param-template-file"`
	GenerateSkeleton  bool     `json:"generate-skeleton"`
	Id                int64    `json:"id"`
}

// NewBootMobileGatewayParam return new BootMobileGatewayParam
func NewBootMobileGatewayParam() *BootMobileGatewayParam {
	return &BootMobileGatewayParam{}
}

// FillValueToSkeleton fill values to empty fields
func (p *BootMobileGatewayParam) FillValueToSkeleton() {
	if isEmpty(p.Selector) {
		p.Selector = []string{""}
	}
	if isEmpty(p.Assumeyes) {
		p.Assumeyes = false
	}
	if isEmpty(p.ParamTemplate) {
		p.ParamTemplate = ""
	}
	if isEmpty(p.ParamTemplateFile) {
		p.ParamTemplateFile = ""
	}
	if isEmpty(p.GenerateSkeleton) {
		p.GenerateSkeleton = false
	}
	if isEmpty(p.Id) {
		p.Id = 0
	}

}

// Validate checks current values in model
func (p *BootMobileGatewayParam) Validate() []error {
	errors := []error{}
	{
		validator := validateSakuraID
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *BootMobileGatewayParam) GetResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *BootMobileGatewayParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["boot"]
}

func (p *BootMobileGatewayParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *BootMobileGatewayParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *BootMobileGatewayParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *BootMobileGatewayParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *BootMobileGatewayParam) SetSelector(v []string) {
	p.Selector = v
}

func (p *BootMobileGatewayParam) GetSelector() []string {
	return p.Selector
}
func (p *BootMobileGatewayParam) SetAssumeyes(v bool) {
	p.Assumeyes = v
}

func (p *BootMobileGatewayParam) GetAssumeyes() bool {
	return p.Assumeyes
}
func (p *BootMobileGatewayParam) SetParamTemplate(v string) {
	p.ParamTemplate = v
}

func (p *BootMobileGatewayParam) GetParamTemplate() string {
	return p.ParamTemplate
}
func (p *BootMobileGatewayParam) SetParamTemplateFile(v string) {
	p.ParamTemplateFile = v
}

func (p *BootMobileGatewayParam) GetParamTemplateFile() string {
	return p.ParamTemplateFile
}
func (p *BootMobileGatewayParam) SetGenerateSkeleton(v bool) {
	p.GenerateSkeleton = v
}

func (p *BootMobileGatewayParam) GetGenerateSkeleton() bool {
	return p.GenerateSkeleton
}
func (p *BootMobileGatewayParam) SetId(v int64) {
	p.Id = v
}

func (p *BootMobileGatewayParam) GetId() int64 {
	return p.Id
}

// ShutdownMobileGatewayParam is input parameters for the sacloud API
type ShutdownMobileGatewayParam struct {
	Selector          []string `json:"selector"`
	Assumeyes         bool     `json:"assumeyes"`
	ParamTemplate     string   `json:"param-template"`
	ParamTemplateFile string   `json:"param-template-file"`
	GenerateSkeleton  bool     `json:"generate-skeleton"`
	Id                int64    `json:"id"`
}

// NewShutdownMobileGatewayParam return new ShutdownMobileGatewayParam
func NewShutdownMobileGatewayParam() *ShutdownMobileGatewayParam {
	return &ShutdownMobileGatewayParam{}
}

// FillValueToSkeleton fill values to empty fields
func (p *ShutdownMobileGatewayParam) FillValueToSkeleton() {
	if isEmpty(p.Selector) {
		p.Selector = []string{""}
	}
	if isEmpty(p.Assumeyes) {
		p.Assumeyes = false
	}
	if isEmpty(p.ParamTemplate) {
		p.ParamTemplate = ""
	}
	if isEmpty(p.ParamTemplateFile) {
		p.ParamTemplateFile = ""
	}
	if isEmpty(p.GenerateSkeleton) {
		p.GenerateSkeleton = false
	}
	if isEmpty(p.Id) {
		p.Id = 0
	}

}

// Validate checks current values in model
func (p *ShutdownMobileGatewayParam) Validate() []error {
	errors := []error{}
	{
		validator := validateSakuraID
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *ShutdownMobileGatewayParam) GetResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *ShutdownMobileGatewayParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["shutdown"]
}

func (p *ShutdownMobileGatewayParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *ShutdownMobileGatewayParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *ShutdownMobileGatewayParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *ShutdownMobileGatewayParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *ShutdownMobileGatewayParam) SetSelector(v []string) {
	p.Selector = v
}

func (p *ShutdownMobileGatewayParam) GetSelector() []string {
	return p.Selector
}
func (p *ShutdownMobileGatewayParam) SetAssumeyes(v bool) {
	p.Assumeyes = v
}

func (p *ShutdownMobileGatewayParam) GetAssumeyes() bool {
	return p.Assumeyes
}
func (p *ShutdownMobileGatewayParam) SetParamTemplate(v string) {
	p.ParamTemplate = v
}

func (p *ShutdownMobileGatewayParam) GetParamTemplate() string {
	return p.ParamTemplate
}
func (p *ShutdownMobileGatewayParam) SetParamTemplateFile(v string) {
	p.ParamTemplateFile = v
}

func (p *ShutdownMobileGatewayParam) GetParamTemplateFile() string {
	return p.ParamTemplateFile
}
func (p *ShutdownMobileGatewayParam) SetGenerateSkeleton(v bool) {
	p.GenerateSkeleton = v
}

func (p *ShutdownMobileGatewayParam) GetGenerateSkeleton() bool {
	return p.GenerateSkeleton
}
func (p *ShutdownMobileGatewayParam) SetId(v int64) {
	p.Id = v
}

func (p *ShutdownMobileGatewayParam) GetId() int64 {
	return p.Id
}

// ShutdownForceMobileGatewayParam is input parameters for the sacloud API
type ShutdownForceMobileGatewayParam struct {
	Selector          []string `json:"selector"`
	Assumeyes         bool     `json:"assumeyes"`
	ParamTemplate     string   `json:"param-template"`
	ParamTemplateFile string   `json:"param-template-file"`
	GenerateSkeleton  bool     `json:"generate-skeleton"`
	Id                int64    `json:"id"`
}

// NewShutdownForceMobileGatewayParam return new ShutdownForceMobileGatewayParam
func NewShutdownForceMobileGatewayParam() *ShutdownForceMobileGatewayParam {
	return &ShutdownForceMobileGatewayParam{}
}

// FillValueToSkeleton fill values to empty fields
func (p *ShutdownForceMobileGatewayParam) FillValueToSkeleton() {
	if isEmpty(p.Selector) {
		p.Selector = []string{""}
	}
	if isEmpty(p.Assumeyes) {
		p.Assumeyes = false
	}
	if isEmpty(p.ParamTemplate) {
		p.ParamTemplate = ""
	}
	if isEmpty(p.ParamTemplateFile) {
		p.ParamTemplateFile = ""
	}
	if isEmpty(p.GenerateSkeleton) {
		p.GenerateSkeleton = false
	}
	if isEmpty(p.Id) {
		p.Id = 0
	}

}

// Validate checks current values in model
func (p *ShutdownForceMobileGatewayParam) Validate() []error {
	errors := []error{}
	{
		validator := validateSakuraID
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *ShutdownForceMobileGatewayParam) GetResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *ShutdownForceMobileGatewayParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["shutdown-force"]
}

func (p *ShutdownForceMobileGatewayParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *ShutdownForceMobileGatewayParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *ShutdownForceMobileGatewayParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *ShutdownForceMobileGatewayParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *ShutdownForceMobileGatewayParam) SetSelector(v []string) {
	p.Selector = v
}

func (p *ShutdownForceMobileGatewayParam) GetSelector() []string {
	return p.Selector
}
func (p *ShutdownForceMobileGatewayParam) SetAssumeyes(v bool) {
	p.Assumeyes = v
}

func (p *ShutdownForceMobileGatewayParam) GetAssumeyes() bool {
	return p.Assumeyes
}
func (p *ShutdownForceMobileGatewayParam) SetParamTemplate(v string) {
	p.ParamTemplate = v
}

func (p *ShutdownForceMobileGatewayParam) GetParamTemplate() string {
	return p.ParamTemplate
}
func (p *ShutdownForceMobileGatewayParam) SetParamTemplateFile(v string) {
	p.ParamTemplateFile = v
}

func (p *ShutdownForceMobileGatewayParam) GetParamTemplateFile() string {
	return p.ParamTemplateFile
}
func (p *ShutdownForceMobileGatewayParam) SetGenerateSkeleton(v bool) {
	p.GenerateSkeleton = v
}

func (p *ShutdownForceMobileGatewayParam) GetGenerateSkeleton() bool {
	return p.GenerateSkeleton
}
func (p *ShutdownForceMobileGatewayParam) SetId(v int64) {
	p.Id = v
}

func (p *ShutdownForceMobileGatewayParam) GetId() int64 {
	return p.Id
}

// ResetMobileGatewayParam is input parameters for the sacloud API
type ResetMobileGatewayParam struct {
	Selector          []string `json:"selector"`
	Assumeyes         bool     `json:"assumeyes"`
	ParamTemplate     string   `json:"param-template"`
	ParamTemplateFile string   `json:"param-template-file"`
	GenerateSkeleton  bool     `json:"generate-skeleton"`
	Id                int64    `json:"id"`
}

// NewResetMobileGatewayParam return new ResetMobileGatewayParam
func NewResetMobileGatewayParam() *ResetMobileGatewayParam {
	return &ResetMobileGatewayParam{}
}

// FillValueToSkeleton fill values to empty fields
func (p *ResetMobileGatewayParam) FillValueToSkeleton() {
	if isEmpty(p.Selector) {
		p.Selector = []string{""}
	}
	if isEmpty(p.Assumeyes) {
		p.Assumeyes = false
	}
	if isEmpty(p.ParamTemplate) {
		p.ParamTemplate = ""
	}
	if isEmpty(p.ParamTemplateFile) {
		p.ParamTemplateFile = ""
	}
	if isEmpty(p.GenerateSkeleton) {
		p.GenerateSkeleton = false
	}
	if isEmpty(p.Id) {
		p.Id = 0
	}

}

// Validate checks current values in model
func (p *ResetMobileGatewayParam) Validate() []error {
	errors := []error{}
	{
		validator := validateSakuraID
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *ResetMobileGatewayParam) GetResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *ResetMobileGatewayParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["reset"]
}

func (p *ResetMobileGatewayParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *ResetMobileGatewayParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *ResetMobileGatewayParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *ResetMobileGatewayParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *ResetMobileGatewayParam) SetSelector(v []string) {
	p.Selector = v
}

func (p *ResetMobileGatewayParam) GetSelector() []string {
	return p.Selector
}
func (p *ResetMobileGatewayParam) SetAssumeyes(v bool) {
	p.Assumeyes = v
}

func (p *ResetMobileGatewayParam) GetAssumeyes() bool {
	return p.Assumeyes
}
func (p *ResetMobileGatewayParam) SetParamTemplate(v string) {
	p.ParamTemplate = v
}

func (p *ResetMobileGatewayParam) GetParamTemplate() string {
	return p.ParamTemplate
}
func (p *ResetMobileGatewayParam) SetParamTemplateFile(v string) {
	p.ParamTemplateFile = v
}

func (p *ResetMobileGatewayParam) GetParamTemplateFile() string {
	return p.ParamTemplateFile
}
func (p *ResetMobileGatewayParam) SetGenerateSkeleton(v bool) {
	p.GenerateSkeleton = v
}

func (p *ResetMobileGatewayParam) GetGenerateSkeleton() bool {
	return p.GenerateSkeleton
}
func (p *ResetMobileGatewayParam) SetId(v int64) {
	p.Id = v
}

func (p *ResetMobileGatewayParam) GetId() int64 {
	return p.Id
}

// WaitForBootMobileGatewayParam is input parameters for the sacloud API
type WaitForBootMobileGatewayParam struct {
	Selector          []string `json:"selector"`
	ParamTemplate     string   `json:"param-template"`
	ParamTemplateFile string   `json:"param-template-file"`
	GenerateSkeleton  bool     `json:"generate-skeleton"`
	Id                int64    `json:"id"`
}

// NewWaitForBootMobileGatewayParam return new WaitForBootMobileGatewayParam
func NewWaitForBootMobileGatewayParam() *WaitForBootMobileGatewayParam {
	return &WaitForBootMobileGatewayParam{}
}

// FillValueToSkeleton fill values to empty fields
func (p *WaitForBootMobileGatewayParam) FillValueToSkeleton() {
	if isEmpty(p.Selector) {
		p.Selector = []string{""}
	}
	if isEmpty(p.ParamTemplate) {
		p.ParamTemplate = ""
	}
	if isEmpty(p.ParamTemplateFile) {
		p.ParamTemplateFile = ""
	}
	if isEmpty(p.GenerateSkeleton) {
		p.GenerateSkeleton = false
	}
	if isEmpty(p.Id) {
		p.Id = 0
	}

}

// Validate checks current values in model
func (p *WaitForBootMobileGatewayParam) Validate() []error {
	errors := []error{}
	{
		validator := validateSakuraID
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *WaitForBootMobileGatewayParam) GetResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *WaitForBootMobileGatewayParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["wait-for-boot"]
}

func (p *WaitForBootMobileGatewayParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *WaitForBootMobileGatewayParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *WaitForBootMobileGatewayParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *WaitForBootMobileGatewayParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *WaitForBootMobileGatewayParam) SetSelector(v []string) {
	p.Selector = v
}

func (p *WaitForBootMobileGatewayParam) GetSelector() []string {
	return p.Selector
}
func (p *WaitForBootMobileGatewayParam) SetParamTemplate(v string) {
	p.ParamTemplate = v
}

func (p *WaitForBootMobileGatewayParam) GetParamTemplate() string {
	return p.ParamTemplate
}
func (p *WaitForBootMobileGatewayParam) SetParamTemplateFile(v string) {
	p.ParamTemplateFile = v
}

func (p *WaitForBootMobileGatewayParam) GetParamTemplateFile() string {
	return p.ParamTemplateFile
}
func (p *WaitForBootMobileGatewayParam) SetGenerateSkeleton(v bool) {
	p.GenerateSkeleton = v
}

func (p *WaitForBootMobileGatewayParam) GetGenerateSkeleton() bool {
	return p.GenerateSkeleton
}
func (p *WaitForBootMobileGatewayParam) SetId(v int64) {
	p.Id = v
}

func (p *WaitForBootMobileGatewayParam) GetId() int64 {
	return p.Id
}

// WaitForDownMobileGatewayParam is input parameters for the sacloud API
type WaitForDownMobileGatewayParam struct {
	Selector          []string `json:"selector"`
	ParamTemplate     string   `json:"param-template"`
	ParamTemplateFile string   `json:"param-template-file"`
	GenerateSkeleton  bool     `json:"generate-skeleton"`
	Id                int64    `json:"id"`
}

// NewWaitForDownMobileGatewayParam return new WaitForDownMobileGatewayParam
func NewWaitForDownMobileGatewayParam() *WaitForDownMobileGatewayParam {
	return &WaitForDownMobileGatewayParam{}
}

// FillValueToSkeleton fill values to empty fields
func (p *WaitForDownMobileGatewayParam) FillValueToSkeleton() {
	if isEmpty(p.Selector) {
		p.Selector = []string{""}
	}
	if isEmpty(p.ParamTemplate) {
		p.ParamTemplate = ""
	}
	if isEmpty(p.ParamTemplateFile) {
		p.ParamTemplateFile = ""
	}
	if isEmpty(p.GenerateSkeleton) {
		p.GenerateSkeleton = false
	}
	if isEmpty(p.Id) {
		p.Id = 0
	}

}

// Validate checks current values in model
func (p *WaitForDownMobileGatewayParam) Validate() []error {
	errors := []error{}
	{
		validator := validateSakuraID
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *WaitForDownMobileGatewayParam) GetResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *WaitForDownMobileGatewayParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["wait-for-down"]
}

func (p *WaitForDownMobileGatewayParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *WaitForDownMobileGatewayParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *WaitForDownMobileGatewayParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *WaitForDownMobileGatewayParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *WaitForDownMobileGatewayParam) SetSelector(v []string) {
	p.Selector = v
}

func (p *WaitForDownMobileGatewayParam) GetSelector() []string {
	return p.Selector
}
func (p *WaitForDownMobileGatewayParam) SetParamTemplate(v string) {
	p.ParamTemplate = v
}

func (p *WaitForDownMobileGatewayParam) GetParamTemplate() string {
	return p.ParamTemplate
}
func (p *WaitForDownMobileGatewayParam) SetParamTemplateFile(v string) {
	p.ParamTemplateFile = v
}

func (p *WaitForDownMobileGatewayParam) GetParamTemplateFile() string {
	return p.ParamTemplateFile
}
func (p *WaitForDownMobileGatewayParam) SetGenerateSkeleton(v bool) {
	p.GenerateSkeleton = v
}

func (p *WaitForDownMobileGatewayParam) GetGenerateSkeleton() bool {
	return p.GenerateSkeleton
}
func (p *WaitForDownMobileGatewayParam) SetId(v int64) {
	p.Id = v
}

func (p *WaitForDownMobileGatewayParam) GetId() int64 {
	return p.Id
}

// InterfaceInfoMobileGatewayParam is input parameters for the sacloud API
type InterfaceInfoMobileGatewayParam struct {
	Selector          []string `json:"selector"`
	ParamTemplate     string   `json:"param-template"`
	ParamTemplateFile string   `json:"param-template-file"`
	GenerateSkeleton  bool     `json:"generate-skeleton"`
	OutputType        string   `json:"output-type"`
	Column            []string `json:"column"`
	Quiet             bool     `json:"quiet"`
	Format            string   `json:"format"`
	FormatFile        string   `json:"format-file"`
	Query             string   `json:"query"`
	Id                int64    `json:"id"`
}

// NewInterfaceInfoMobileGatewayParam return new InterfaceInfoMobileGatewayParam
func NewInterfaceInfoMobileGatewayParam() *InterfaceInfoMobileGatewayParam {
	return &InterfaceInfoMobileGatewayParam{}
}

// FillValueToSkeleton fill values to empty fields
func (p *InterfaceInfoMobileGatewayParam) FillValueToSkeleton() {
	if isEmpty(p.Selector) {
		p.Selector = []string{""}
	}
	if isEmpty(p.ParamTemplate) {
		p.ParamTemplate = ""
	}
	if isEmpty(p.ParamTemplateFile) {
		p.ParamTemplateFile = ""
	}
	if isEmpty(p.GenerateSkeleton) {
		p.GenerateSkeleton = false
	}
	if isEmpty(p.OutputType) {
		p.OutputType = ""
	}
	if isEmpty(p.Column) {
		p.Column = []string{""}
	}
	if isEmpty(p.Quiet) {
		p.Quiet = false
	}
	if isEmpty(p.Format) {
		p.Format = ""
	}
	if isEmpty(p.FormatFile) {
		p.FormatFile = ""
	}
	if isEmpty(p.Query) {
		p.Query = ""
	}
	if isEmpty(p.Id) {
		p.Id = 0
	}

}

// Validate checks current values in model
func (p *InterfaceInfoMobileGatewayParam) Validate() []error {
	errors := []error{}
	{
		validator := validateSakuraID
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := schema.ValidateInStrValues(define.AllowOutputTypes...)
		errs := validator("--output-type", p.OutputType)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		errs := validateInputOption(p)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		errs := validateOutputOption(p)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *InterfaceInfoMobileGatewayParam) GetResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *InterfaceInfoMobileGatewayParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["interface-info"]
}

func (p *InterfaceInfoMobileGatewayParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *InterfaceInfoMobileGatewayParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *InterfaceInfoMobileGatewayParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *InterfaceInfoMobileGatewayParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *InterfaceInfoMobileGatewayParam) SetSelector(v []string) {
	p.Selector = v
}

func (p *InterfaceInfoMobileGatewayParam) GetSelector() []string {
	return p.Selector
}
func (p *InterfaceInfoMobileGatewayParam) SetParamTemplate(v string) {
	p.ParamTemplate = v
}

func (p *InterfaceInfoMobileGatewayParam) GetParamTemplate() string {
	return p.ParamTemplate
}
func (p *InterfaceInfoMobileGatewayParam) SetParamTemplateFile(v string) {
	p.ParamTemplateFile = v
}

func (p *InterfaceInfoMobileGatewayParam) GetParamTemplateFile() string {
	return p.ParamTemplateFile
}
func (p *InterfaceInfoMobileGatewayParam) SetGenerateSkeleton(v bool) {
	p.GenerateSkeleton = v
}

func (p *InterfaceInfoMobileGatewayParam) GetGenerateSkeleton() bool {
	return p.GenerateSkeleton
}
func (p *InterfaceInfoMobileGatewayParam) SetOutputType(v string) {
	p.OutputType = v
}

func (p *InterfaceInfoMobileGatewayParam) GetOutputType() string {
	return p.OutputType
}
func (p *InterfaceInfoMobileGatewayParam) SetColumn(v []string) {
	p.Column = v
}

func (p *InterfaceInfoMobileGatewayParam) GetColumn() []string {
	return p.Column
}
func (p *InterfaceInfoMobileGatewayParam) SetQuiet(v bool) {
	p.Quiet = v
}

func (p *InterfaceInfoMobileGatewayParam) GetQuiet() bool {
	return p.Quiet
}
func (p *InterfaceInfoMobileGatewayParam) SetFormat(v string) {
	p.Format = v
}

func (p *InterfaceInfoMobileGatewayParam) GetFormat() string {
	return p.Format
}
func (p *InterfaceInfoMobileGatewayParam) SetFormatFile(v string) {
	p.FormatFile = v
}

func (p *InterfaceInfoMobileGatewayParam) GetFormatFile() string {
	return p.FormatFile
}
func (p *InterfaceInfoMobileGatewayParam) SetQuery(v string) {
	p.Query = v
}

func (p *InterfaceInfoMobileGatewayParam) GetQuery() string {
	return p.Query
}
func (p *InterfaceInfoMobileGatewayParam) SetId(v int64) {
	p.Id = v
}

func (p *InterfaceInfoMobileGatewayParam) GetId() int64 {
	return p.Id
}

// InterfaceConnectMobileGatewayParam is input parameters for the sacloud API
type InterfaceConnectMobileGatewayParam struct {
	Ipaddress         string   `json:"ipaddress"`
	SwitchId          int64    `json:"switch-id"`
	NwMasklen         int      `json:"nw-masklen"`
	Selector          []string `json:"selector"`
	Assumeyes         bool     `json:"assumeyes"`
	ParamTemplate     string   `json:"param-template"`
	ParamTemplateFile string   `json:"param-template-file"`
	GenerateSkeleton  bool     `json:"generate-skeleton"`
	Id                int64    `json:"id"`
}

// NewInterfaceConnectMobileGatewayParam return new InterfaceConnectMobileGatewayParam
func NewInterfaceConnectMobileGatewayParam() *InterfaceConnectMobileGatewayParam {
	return &InterfaceConnectMobileGatewayParam{

		NwMasklen: 24,
	}
}

// FillValueToSkeleton fill values to empty fields
func (p *InterfaceConnectMobileGatewayParam) FillValueToSkeleton() {
	if isEmpty(p.Ipaddress) {
		p.Ipaddress = ""
	}
	if isEmpty(p.SwitchId) {
		p.SwitchId = 0
	}
	if isEmpty(p.NwMasklen) {
		p.NwMasklen = 0
	}
	if isEmpty(p.Selector) {
		p.Selector = []string{""}
	}
	if isEmpty(p.Assumeyes) {
		p.Assumeyes = false
	}
	if isEmpty(p.ParamTemplate) {
		p.ParamTemplate = ""
	}
	if isEmpty(p.ParamTemplateFile) {
		p.ParamTemplateFile = ""
	}
	if isEmpty(p.GenerateSkeleton) {
		p.GenerateSkeleton = false
	}
	if isEmpty(p.Id) {
		p.Id = 0
	}

}

// Validate checks current values in model
func (p *InterfaceConnectMobileGatewayParam) Validate() []error {
	errors := []error{}
	{
		validator := validateRequired
		errs := validator("--ipaddress", p.Ipaddress)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["interface-connect"].Params["ipaddress"].ValidateFunc
		errs := validator("--ipaddress", p.Ipaddress)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := validateRequired
		errs := validator("--switch-id", p.SwitchId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["interface-connect"].Params["switch-id"].ValidateFunc
		errs := validator("--switch-id", p.SwitchId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["interface-connect"].Params["nw-masklen"].ValidateFunc
		errs := validator("--nw-masklen", p.NwMasklen)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := validateSakuraID
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *InterfaceConnectMobileGatewayParam) GetResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *InterfaceConnectMobileGatewayParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["interface-connect"]
}

func (p *InterfaceConnectMobileGatewayParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *InterfaceConnectMobileGatewayParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *InterfaceConnectMobileGatewayParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *InterfaceConnectMobileGatewayParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *InterfaceConnectMobileGatewayParam) SetIpaddress(v string) {
	p.Ipaddress = v
}

func (p *InterfaceConnectMobileGatewayParam) GetIpaddress() string {
	return p.Ipaddress
}
func (p *InterfaceConnectMobileGatewayParam) SetSwitchId(v int64) {
	p.SwitchId = v
}

func (p *InterfaceConnectMobileGatewayParam) GetSwitchId() int64 {
	return p.SwitchId
}
func (p *InterfaceConnectMobileGatewayParam) SetNwMasklen(v int) {
	p.NwMasklen = v
}

func (p *InterfaceConnectMobileGatewayParam) GetNwMasklen() int {
	return p.NwMasklen
}
func (p *InterfaceConnectMobileGatewayParam) SetSelector(v []string) {
	p.Selector = v
}

func (p *InterfaceConnectMobileGatewayParam) GetSelector() []string {
	return p.Selector
}
func (p *InterfaceConnectMobileGatewayParam) SetAssumeyes(v bool) {
	p.Assumeyes = v
}

func (p *InterfaceConnectMobileGatewayParam) GetAssumeyes() bool {
	return p.Assumeyes
}
func (p *InterfaceConnectMobileGatewayParam) SetParamTemplate(v string) {
	p.ParamTemplate = v
}

func (p *InterfaceConnectMobileGatewayParam) GetParamTemplate() string {
	return p.ParamTemplate
}
func (p *InterfaceConnectMobileGatewayParam) SetParamTemplateFile(v string) {
	p.ParamTemplateFile = v
}

func (p *InterfaceConnectMobileGatewayParam) GetParamTemplateFile() string {
	return p.ParamTemplateFile
}
func (p *InterfaceConnectMobileGatewayParam) SetGenerateSkeleton(v bool) {
	p.GenerateSkeleton = v
}

func (p *InterfaceConnectMobileGatewayParam) GetGenerateSkeleton() bool {
	return p.GenerateSkeleton
}
func (p *InterfaceConnectMobileGatewayParam) SetId(v int64) {
	p.Id = v
}

func (p *InterfaceConnectMobileGatewayParam) GetId() int64 {
	return p.Id
}

// InterfaceUpdateMobileGatewayParam is input parameters for the sacloud API
type InterfaceUpdateMobileGatewayParam struct {
	Ipaddress         string   `json:"ipaddress"`
	NwMasklen         int      `json:"nw-masklen"`
	Selector          []string `json:"selector"`
	Assumeyes         bool     `json:"assumeyes"`
	ParamTemplate     string   `json:"param-template"`
	ParamTemplateFile string   `json:"param-template-file"`
	GenerateSkeleton  bool     `json:"generate-skeleton"`
	Id                int64    `json:"id"`
}

// NewInterfaceUpdateMobileGatewayParam return new InterfaceUpdateMobileGatewayParam
func NewInterfaceUpdateMobileGatewayParam() *InterfaceUpdateMobileGatewayParam {
	return &InterfaceUpdateMobileGatewayParam{

		NwMasklen: 24,
	}
}

// FillValueToSkeleton fill values to empty fields
func (p *InterfaceUpdateMobileGatewayParam) FillValueToSkeleton() {
	if isEmpty(p.Ipaddress) {
		p.Ipaddress = ""
	}
	if isEmpty(p.NwMasklen) {
		p.NwMasklen = 0
	}
	if isEmpty(p.Selector) {
		p.Selector = []string{""}
	}
	if isEmpty(p.Assumeyes) {
		p.Assumeyes = false
	}
	if isEmpty(p.ParamTemplate) {
		p.ParamTemplate = ""
	}
	if isEmpty(p.ParamTemplateFile) {
		p.ParamTemplateFile = ""
	}
	if isEmpty(p.GenerateSkeleton) {
		p.GenerateSkeleton = false
	}
	if isEmpty(p.Id) {
		p.Id = 0
	}

}

// Validate checks current values in model
func (p *InterfaceUpdateMobileGatewayParam) Validate() []error {
	errors := []error{}
	{
		validator := define.Resources["MobileGateway"].Commands["interface-update"].Params["ipaddress"].ValidateFunc
		errs := validator("--ipaddress", p.Ipaddress)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["interface-update"].Params["nw-masklen"].ValidateFunc
		errs := validator("--nw-masklen", p.NwMasklen)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := validateSakuraID
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *InterfaceUpdateMobileGatewayParam) GetResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *InterfaceUpdateMobileGatewayParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["interface-update"]
}

func (p *InterfaceUpdateMobileGatewayParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *InterfaceUpdateMobileGatewayParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *InterfaceUpdateMobileGatewayParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *InterfaceUpdateMobileGatewayParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *InterfaceUpdateMobileGatewayParam) SetIpaddress(v string) {
	p.Ipaddress = v
}

func (p *InterfaceUpdateMobileGatewayParam) GetIpaddress() string {
	return p.Ipaddress
}
func (p *InterfaceUpdateMobileGatewayParam) SetNwMasklen(v int) {
	p.NwMasklen = v
}

func (p *InterfaceUpdateMobileGatewayParam) GetNwMasklen() int {
	return p.NwMasklen
}
func (p *InterfaceUpdateMobileGatewayParam) SetSelector(v []string) {
	p.Selector = v
}

func (p *InterfaceUpdateMobileGatewayParam) GetSelector() []string {
	return p.Selector
}
func (p *InterfaceUpdateMobileGatewayParam) SetAssumeyes(v bool) {
	p.Assumeyes = v
}

func (p *InterfaceUpdateMobileGatewayParam) GetAssumeyes() bool {
	return p.Assumeyes
}
func (p *InterfaceUpdateMobileGatewayParam) SetParamTemplate(v string) {
	p.ParamTemplate = v
}

func (p *InterfaceUpdateMobileGatewayParam) GetParamTemplate() string {
	return p.ParamTemplate
}
func (p *InterfaceUpdateMobileGatewayParam) SetParamTemplateFile(v string) {
	p.ParamTemplateFile = v
}

func (p *InterfaceUpdateMobileGatewayParam) GetParamTemplateFile() string {
	return p.ParamTemplateFile
}
func (p *InterfaceUpdateMobileGatewayParam) SetGenerateSkeleton(v bool) {
	p.GenerateSkeleton = v
}

func (p *InterfaceUpdateMobileGatewayParam) GetGenerateSkeleton() bool {
	return p.GenerateSkeleton
}
func (p *InterfaceUpdateMobileGatewayParam) SetId(v int64) {
	p.Id = v
}

func (p *InterfaceUpdateMobileGatewayParam) GetId() int64 {
	return p.Id
}

// InterfaceDisconnectMobileGatewayParam is input parameters for the sacloud API
type InterfaceDisconnectMobileGatewayParam struct {
	Selector          []string `json:"selector"`
	Assumeyes         bool     `json:"assumeyes"`
	ParamTemplate     string   `json:"param-template"`
	ParamTemplateFile string   `json:"param-template-file"`
	GenerateSkeleton  bool     `json:"generate-skeleton"`
	Id                int64    `json:"id"`
}

// NewInterfaceDisconnectMobileGatewayParam return new InterfaceDisconnectMobileGatewayParam
func NewInterfaceDisconnectMobileGatewayParam() *InterfaceDisconnectMobileGatewayParam {
	return &InterfaceDisconnectMobileGatewayParam{}
}

// FillValueToSkeleton fill values to empty fields
func (p *InterfaceDisconnectMobileGatewayParam) FillValueToSkeleton() {
	if isEmpty(p.Selector) {
		p.Selector = []string{""}
	}
	if isEmpty(p.Assumeyes) {
		p.Assumeyes = false
	}
	if isEmpty(p.ParamTemplate) {
		p.ParamTemplate = ""
	}
	if isEmpty(p.ParamTemplateFile) {
		p.ParamTemplateFile = ""
	}
	if isEmpty(p.GenerateSkeleton) {
		p.GenerateSkeleton = false
	}
	if isEmpty(p.Id) {
		p.Id = 0
	}

}

// Validate checks current values in model
func (p *InterfaceDisconnectMobileGatewayParam) Validate() []error {
	errors := []error{}
	{
		validator := validateSakuraID
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *InterfaceDisconnectMobileGatewayParam) GetResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *InterfaceDisconnectMobileGatewayParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["interface-disconnect"]
}

func (p *InterfaceDisconnectMobileGatewayParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *InterfaceDisconnectMobileGatewayParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *InterfaceDisconnectMobileGatewayParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *InterfaceDisconnectMobileGatewayParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *InterfaceDisconnectMobileGatewayParam) SetSelector(v []string) {
	p.Selector = v
}

func (p *InterfaceDisconnectMobileGatewayParam) GetSelector() []string {
	return p.Selector
}
func (p *InterfaceDisconnectMobileGatewayParam) SetAssumeyes(v bool) {
	p.Assumeyes = v
}

func (p *InterfaceDisconnectMobileGatewayParam) GetAssumeyes() bool {
	return p.Assumeyes
}
func (p *InterfaceDisconnectMobileGatewayParam) SetParamTemplate(v string) {
	p.ParamTemplate = v
}

func (p *InterfaceDisconnectMobileGatewayParam) GetParamTemplate() string {
	return p.ParamTemplate
}
func (p *InterfaceDisconnectMobileGatewayParam) SetParamTemplateFile(v string) {
	p.ParamTemplateFile = v
}

func (p *InterfaceDisconnectMobileGatewayParam) GetParamTemplateFile() string {
	return p.ParamTemplateFile
}
func (p *InterfaceDisconnectMobileGatewayParam) SetGenerateSkeleton(v bool) {
	p.GenerateSkeleton = v
}

func (p *InterfaceDisconnectMobileGatewayParam) GetGenerateSkeleton() bool {
	return p.GenerateSkeleton
}
func (p *InterfaceDisconnectMobileGatewayParam) SetId(v int64) {
	p.Id = v
}

func (p *InterfaceDisconnectMobileGatewayParam) GetId() int64 {
	return p.Id
}

// DnsUpdateMobileGatewayParam is input parameters for the sacloud API
type DnsUpdateMobileGatewayParam struct {
	Dns1              string   `json:"dns1"`
	Dns2              string   `json:"dns2"`
	Selector          []string `json:"selector"`
	Assumeyes         bool     `json:"assumeyes"`
	ParamTemplate     string   `json:"param-template"`
	ParamTemplateFile string   `json:"param-template-file"`
	GenerateSkeleton  bool     `json:"generate-skeleton"`
	Id                int64    `json:"id"`
}

// NewDnsUpdateMobileGatewayParam return new DnsUpdateMobileGatewayParam
func NewDnsUpdateMobileGatewayParam() *DnsUpdateMobileGatewayParam {
	return &DnsUpdateMobileGatewayParam{}
}

// FillValueToSkeleton fill values to empty fields
func (p *DnsUpdateMobileGatewayParam) FillValueToSkeleton() {
	if isEmpty(p.Dns1) {
		p.Dns1 = ""
	}
	if isEmpty(p.Dns2) {
		p.Dns2 = ""
	}
	if isEmpty(p.Selector) {
		p.Selector = []string{""}
	}
	if isEmpty(p.Assumeyes) {
		p.Assumeyes = false
	}
	if isEmpty(p.ParamTemplate) {
		p.ParamTemplate = ""
	}
	if isEmpty(p.ParamTemplateFile) {
		p.ParamTemplateFile = ""
	}
	if isEmpty(p.GenerateSkeleton) {
		p.GenerateSkeleton = false
	}
	if isEmpty(p.Id) {
		p.Id = 0
	}

}

// Validate checks current values in model
func (p *DnsUpdateMobileGatewayParam) Validate() []error {
	errors := []error{}
	{
		validator := validateRequired
		errs := validator("--dns1", p.Dns1)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["dns-update"].Params["dns1"].ValidateFunc
		errs := validator("--dns1", p.Dns1)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := validateRequired
		errs := validator("--dns2", p.Dns2)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["dns-update"].Params["dns2"].ValidateFunc
		errs := validator("--dns2", p.Dns2)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := validateSakuraID
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *DnsUpdateMobileGatewayParam) GetResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *DnsUpdateMobileGatewayParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["dns-update"]
}

func (p *DnsUpdateMobileGatewayParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *DnsUpdateMobileGatewayParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *DnsUpdateMobileGatewayParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *DnsUpdateMobileGatewayParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *DnsUpdateMobileGatewayParam) SetDns1(v string) {
	p.Dns1 = v
}

func (p *DnsUpdateMobileGatewayParam) GetDns1() string {
	return p.Dns1
}
func (p *DnsUpdateMobileGatewayParam) SetDns2(v string) {
	p.Dns2 = v
}

func (p *DnsUpdateMobileGatewayParam) GetDns2() string {
	return p.Dns2
}
func (p *DnsUpdateMobileGatewayParam) SetSelector(v []string) {
	p.Selector = v
}

func (p *DnsUpdateMobileGatewayParam) GetSelector() []string {
	return p.Selector
}
func (p *DnsUpdateMobileGatewayParam) SetAssumeyes(v bool) {
	p.Assumeyes = v
}

func (p *DnsUpdateMobileGatewayParam) GetAssumeyes() bool {
	return p.Assumeyes
}
func (p *DnsUpdateMobileGatewayParam) SetParamTemplate(v string) {
	p.ParamTemplate = v
}

func (p *DnsUpdateMobileGatewayParam) GetParamTemplate() string {
	return p.ParamTemplate
}
func (p *DnsUpdateMobileGatewayParam) SetParamTemplateFile(v string) {
	p.ParamTemplateFile = v
}

func (p *DnsUpdateMobileGatewayParam) GetParamTemplateFile() string {
	return p.ParamTemplateFile
}
func (p *DnsUpdateMobileGatewayParam) SetGenerateSkeleton(v bool) {
	p.GenerateSkeleton = v
}

func (p *DnsUpdateMobileGatewayParam) GetGenerateSkeleton() bool {
	return p.GenerateSkeleton
}
func (p *DnsUpdateMobileGatewayParam) SetId(v int64) {
	p.Id = v
}

func (p *DnsUpdateMobileGatewayParam) GetId() int64 {
	return p.Id
}

// SimInfoMobileGatewayParam is input parameters for the sacloud API
type SimInfoMobileGatewayParam struct {
	Selector          []string `json:"selector"`
	ParamTemplate     string   `json:"param-template"`
	ParamTemplateFile string   `json:"param-template-file"`
	GenerateSkeleton  bool     `json:"generate-skeleton"`
	OutputType        string   `json:"output-type"`
	Column            []string `json:"column"`
	Quiet             bool     `json:"quiet"`
	Format            string   `json:"format"`
	FormatFile        string   `json:"format-file"`
	Query             string   `json:"query"`
	Id                int64    `json:"id"`
}

// NewSimInfoMobileGatewayParam return new SimInfoMobileGatewayParam
func NewSimInfoMobileGatewayParam() *SimInfoMobileGatewayParam {
	return &SimInfoMobileGatewayParam{}
}

// FillValueToSkeleton fill values to empty fields
func (p *SimInfoMobileGatewayParam) FillValueToSkeleton() {
	if isEmpty(p.Selector) {
		p.Selector = []string{""}
	}
	if isEmpty(p.ParamTemplate) {
		p.ParamTemplate = ""
	}
	if isEmpty(p.ParamTemplateFile) {
		p.ParamTemplateFile = ""
	}
	if isEmpty(p.GenerateSkeleton) {
		p.GenerateSkeleton = false
	}
	if isEmpty(p.OutputType) {
		p.OutputType = ""
	}
	if isEmpty(p.Column) {
		p.Column = []string{""}
	}
	if isEmpty(p.Quiet) {
		p.Quiet = false
	}
	if isEmpty(p.Format) {
		p.Format = ""
	}
	if isEmpty(p.FormatFile) {
		p.FormatFile = ""
	}
	if isEmpty(p.Query) {
		p.Query = ""
	}
	if isEmpty(p.Id) {
		p.Id = 0
	}

}

// Validate checks current values in model
func (p *SimInfoMobileGatewayParam) Validate() []error {
	errors := []error{}
	{
		validator := validateSakuraID
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := schema.ValidateInStrValues(define.AllowOutputTypes...)
		errs := validator("--output-type", p.OutputType)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		errs := validateInputOption(p)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		errs := validateOutputOption(p)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *SimInfoMobileGatewayParam) GetResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *SimInfoMobileGatewayParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["sim-info"]
}

func (p *SimInfoMobileGatewayParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *SimInfoMobileGatewayParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *SimInfoMobileGatewayParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *SimInfoMobileGatewayParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *SimInfoMobileGatewayParam) SetSelector(v []string) {
	p.Selector = v
}

func (p *SimInfoMobileGatewayParam) GetSelector() []string {
	return p.Selector
}
func (p *SimInfoMobileGatewayParam) SetParamTemplate(v string) {
	p.ParamTemplate = v
}

func (p *SimInfoMobileGatewayParam) GetParamTemplate() string {
	return p.ParamTemplate
}
func (p *SimInfoMobileGatewayParam) SetParamTemplateFile(v string) {
	p.ParamTemplateFile = v
}

func (p *SimInfoMobileGatewayParam) GetParamTemplateFile() string {
	return p.ParamTemplateFile
}
func (p *SimInfoMobileGatewayParam) SetGenerateSkeleton(v bool) {
	p.GenerateSkeleton = v
}

func (p *SimInfoMobileGatewayParam) GetGenerateSkeleton() bool {
	return p.GenerateSkeleton
}
func (p *SimInfoMobileGatewayParam) SetOutputType(v string) {
	p.OutputType = v
}

func (p *SimInfoMobileGatewayParam) GetOutputType() string {
	return p.OutputType
}
func (p *SimInfoMobileGatewayParam) SetColumn(v []string) {
	p.Column = v
}

func (p *SimInfoMobileGatewayParam) GetColumn() []string {
	return p.Column
}
func (p *SimInfoMobileGatewayParam) SetQuiet(v bool) {
	p.Quiet = v
}

func (p *SimInfoMobileGatewayParam) GetQuiet() bool {
	return p.Quiet
}
func (p *SimInfoMobileGatewayParam) SetFormat(v string) {
	p.Format = v
}

func (p *SimInfoMobileGatewayParam) GetFormat() string {
	return p.Format
}
func (p *SimInfoMobileGatewayParam) SetFormatFile(v string) {
	p.FormatFile = v
}

func (p *SimInfoMobileGatewayParam) GetFormatFile() string {
	return p.FormatFile
}
func (p *SimInfoMobileGatewayParam) SetQuery(v string) {
	p.Query = v
}

func (p *SimInfoMobileGatewayParam) GetQuery() string {
	return p.Query
}
func (p *SimInfoMobileGatewayParam) SetId(v int64) {
	p.Id = v
}

func (p *SimInfoMobileGatewayParam) GetId() int64 {
	return p.Id
}

// SimAddMobileGatewayParam is input parameters for the sacloud API
type SimAddMobileGatewayParam struct {
	Ipaddress         string   `json:"ipaddress"`
	SimId             int64    `json:"sim-id"`
	Selector          []string `json:"selector"`
	Assumeyes         bool     `json:"assumeyes"`
	ParamTemplate     string   `json:"param-template"`
	ParamTemplateFile string   `json:"param-template-file"`
	GenerateSkeleton  bool     `json:"generate-skeleton"`
	Id                int64    `json:"id"`
}

// NewSimAddMobileGatewayParam return new SimAddMobileGatewayParam
func NewSimAddMobileGatewayParam() *SimAddMobileGatewayParam {
	return &SimAddMobileGatewayParam{}
}

// FillValueToSkeleton fill values to empty fields
func (p *SimAddMobileGatewayParam) FillValueToSkeleton() {
	if isEmpty(p.Ipaddress) {
		p.Ipaddress = ""
	}
	if isEmpty(p.SimId) {
		p.SimId = 0
	}
	if isEmpty(p.Selector) {
		p.Selector = []string{""}
	}
	if isEmpty(p.Assumeyes) {
		p.Assumeyes = false
	}
	if isEmpty(p.ParamTemplate) {
		p.ParamTemplate = ""
	}
	if isEmpty(p.ParamTemplateFile) {
		p.ParamTemplateFile = ""
	}
	if isEmpty(p.GenerateSkeleton) {
		p.GenerateSkeleton = false
	}
	if isEmpty(p.Id) {
		p.Id = 0
	}

}

// Validate checks current values in model
func (p *SimAddMobileGatewayParam) Validate() []error {
	errors := []error{}
	{
		validator := validateRequired
		errs := validator("--ipaddress", p.Ipaddress)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["sim-add"].Params["ipaddress"].ValidateFunc
		errs := validator("--ipaddress", p.Ipaddress)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := validateRequired
		errs := validator("--sim-id", p.SimId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["sim-add"].Params["sim-id"].ValidateFunc
		errs := validator("--sim-id", p.SimId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := validateSakuraID
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *SimAddMobileGatewayParam) GetResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *SimAddMobileGatewayParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["sim-add"]
}

func (p *SimAddMobileGatewayParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *SimAddMobileGatewayParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *SimAddMobileGatewayParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *SimAddMobileGatewayParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *SimAddMobileGatewayParam) SetIpaddress(v string) {
	p.Ipaddress = v
}

func (p *SimAddMobileGatewayParam) GetIpaddress() string {
	return p.Ipaddress
}
func (p *SimAddMobileGatewayParam) SetSimId(v int64) {
	p.SimId = v
}

func (p *SimAddMobileGatewayParam) GetSimId() int64 {
	return p.SimId
}
func (p *SimAddMobileGatewayParam) SetSelector(v []string) {
	p.Selector = v
}

func (p *SimAddMobileGatewayParam) GetSelector() []string {
	return p.Selector
}
func (p *SimAddMobileGatewayParam) SetAssumeyes(v bool) {
	p.Assumeyes = v
}

func (p *SimAddMobileGatewayParam) GetAssumeyes() bool {
	return p.Assumeyes
}
func (p *SimAddMobileGatewayParam) SetParamTemplate(v string) {
	p.ParamTemplate = v
}

func (p *SimAddMobileGatewayParam) GetParamTemplate() string {
	return p.ParamTemplate
}
func (p *SimAddMobileGatewayParam) SetParamTemplateFile(v string) {
	p.ParamTemplateFile = v
}

func (p *SimAddMobileGatewayParam) GetParamTemplateFile() string {
	return p.ParamTemplateFile
}
func (p *SimAddMobileGatewayParam) SetGenerateSkeleton(v bool) {
	p.GenerateSkeleton = v
}

func (p *SimAddMobileGatewayParam) GetGenerateSkeleton() bool {
	return p.GenerateSkeleton
}
func (p *SimAddMobileGatewayParam) SetId(v int64) {
	p.Id = v
}

func (p *SimAddMobileGatewayParam) GetId() int64 {
	return p.Id
}

// SimUpdateMobileGatewayParam is input parameters for the sacloud API
type SimUpdateMobileGatewayParam struct {
	Ipaddress         string   `json:"ipaddress"`
	SimId             int64    `json:"sim-id"`
	Selector          []string `json:"selector"`
	Assumeyes         bool     `json:"assumeyes"`
	ParamTemplate     string   `json:"param-template"`
	ParamTemplateFile string   `json:"param-template-file"`
	GenerateSkeleton  bool     `json:"generate-skeleton"`
	Id                int64    `json:"id"`
}

// NewSimUpdateMobileGatewayParam return new SimUpdateMobileGatewayParam
func NewSimUpdateMobileGatewayParam() *SimUpdateMobileGatewayParam {
	return &SimUpdateMobileGatewayParam{}
}

// FillValueToSkeleton fill values to empty fields
func (p *SimUpdateMobileGatewayParam) FillValueToSkeleton() {
	if isEmpty(p.Ipaddress) {
		p.Ipaddress = ""
	}
	if isEmpty(p.SimId) {
		p.SimId = 0
	}
	if isEmpty(p.Selector) {
		p.Selector = []string{""}
	}
	if isEmpty(p.Assumeyes) {
		p.Assumeyes = false
	}
	if isEmpty(p.ParamTemplate) {
		p.ParamTemplate = ""
	}
	if isEmpty(p.ParamTemplateFile) {
		p.ParamTemplateFile = ""
	}
	if isEmpty(p.GenerateSkeleton) {
		p.GenerateSkeleton = false
	}
	if isEmpty(p.Id) {
		p.Id = 0
	}

}

// Validate checks current values in model
func (p *SimUpdateMobileGatewayParam) Validate() []error {
	errors := []error{}
	{
		validator := define.Resources["MobileGateway"].Commands["sim-update"].Params["ipaddress"].ValidateFunc
		errs := validator("--ipaddress", p.Ipaddress)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := validateRequired
		errs := validator("--sim-id", p.SimId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["sim-update"].Params["sim-id"].ValidateFunc
		errs := validator("--sim-id", p.SimId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := validateSakuraID
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *SimUpdateMobileGatewayParam) GetResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *SimUpdateMobileGatewayParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["sim-update"]
}

func (p *SimUpdateMobileGatewayParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *SimUpdateMobileGatewayParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *SimUpdateMobileGatewayParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *SimUpdateMobileGatewayParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *SimUpdateMobileGatewayParam) SetIpaddress(v string) {
	p.Ipaddress = v
}

func (p *SimUpdateMobileGatewayParam) GetIpaddress() string {
	return p.Ipaddress
}
func (p *SimUpdateMobileGatewayParam) SetSimId(v int64) {
	p.SimId = v
}

func (p *SimUpdateMobileGatewayParam) GetSimId() int64 {
	return p.SimId
}
func (p *SimUpdateMobileGatewayParam) SetSelector(v []string) {
	p.Selector = v
}

func (p *SimUpdateMobileGatewayParam) GetSelector() []string {
	return p.Selector
}
func (p *SimUpdateMobileGatewayParam) SetAssumeyes(v bool) {
	p.Assumeyes = v
}

func (p *SimUpdateMobileGatewayParam) GetAssumeyes() bool {
	return p.Assumeyes
}
func (p *SimUpdateMobileGatewayParam) SetParamTemplate(v string) {
	p.ParamTemplate = v
}

func (p *SimUpdateMobileGatewayParam) GetParamTemplate() string {
	return p.ParamTemplate
}
func (p *SimUpdateMobileGatewayParam) SetParamTemplateFile(v string) {
	p.ParamTemplateFile = v
}

func (p *SimUpdateMobileGatewayParam) GetParamTemplateFile() string {
	return p.ParamTemplateFile
}
func (p *SimUpdateMobileGatewayParam) SetGenerateSkeleton(v bool) {
	p.GenerateSkeleton = v
}

func (p *SimUpdateMobileGatewayParam) GetGenerateSkeleton() bool {
	return p.GenerateSkeleton
}
func (p *SimUpdateMobileGatewayParam) SetId(v int64) {
	p.Id = v
}

func (p *SimUpdateMobileGatewayParam) GetId() int64 {
	return p.Id
}

// SimDeleteMobileGatewayParam is input parameters for the sacloud API
type SimDeleteMobileGatewayParam struct {
	SimId             int64    `json:"sim-id"`
	Selector          []string `json:"selector"`
	Assumeyes         bool     `json:"assumeyes"`
	ParamTemplate     string   `json:"param-template"`
	ParamTemplateFile string   `json:"param-template-file"`
	GenerateSkeleton  bool     `json:"generate-skeleton"`
	Id                int64    `json:"id"`
}

// NewSimDeleteMobileGatewayParam return new SimDeleteMobileGatewayParam
func NewSimDeleteMobileGatewayParam() *SimDeleteMobileGatewayParam {
	return &SimDeleteMobileGatewayParam{}
}

// FillValueToSkeleton fill values to empty fields
func (p *SimDeleteMobileGatewayParam) FillValueToSkeleton() {
	if isEmpty(p.SimId) {
		p.SimId = 0
	}
	if isEmpty(p.Selector) {
		p.Selector = []string{""}
	}
	if isEmpty(p.Assumeyes) {
		p.Assumeyes = false
	}
	if isEmpty(p.ParamTemplate) {
		p.ParamTemplate = ""
	}
	if isEmpty(p.ParamTemplateFile) {
		p.ParamTemplateFile = ""
	}
	if isEmpty(p.GenerateSkeleton) {
		p.GenerateSkeleton = false
	}
	if isEmpty(p.Id) {
		p.Id = 0
	}

}

// Validate checks current values in model
func (p *SimDeleteMobileGatewayParam) Validate() []error {
	errors := []error{}
	{
		validator := validateRequired
		errs := validator("--sim-id", p.SimId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := define.Resources["MobileGateway"].Commands["sim-delete"].Params["sim-id"].ValidateFunc
		errs := validator("--sim-id", p.SimId)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := validateSakuraID
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *SimDeleteMobileGatewayParam) GetResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *SimDeleteMobileGatewayParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["sim-delete"]
}

func (p *SimDeleteMobileGatewayParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *SimDeleteMobileGatewayParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *SimDeleteMobileGatewayParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *SimDeleteMobileGatewayParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *SimDeleteMobileGatewayParam) SetSimId(v int64) {
	p.SimId = v
}

func (p *SimDeleteMobileGatewayParam) GetSimId() int64 {
	return p.SimId
}
func (p *SimDeleteMobileGatewayParam) SetSelector(v []string) {
	p.Selector = v
}

func (p *SimDeleteMobileGatewayParam) GetSelector() []string {
	return p.Selector
}
func (p *SimDeleteMobileGatewayParam) SetAssumeyes(v bool) {
	p.Assumeyes = v
}

func (p *SimDeleteMobileGatewayParam) GetAssumeyes() bool {
	return p.Assumeyes
}
func (p *SimDeleteMobileGatewayParam) SetParamTemplate(v string) {
	p.ParamTemplate = v
}

func (p *SimDeleteMobileGatewayParam) GetParamTemplate() string {
	return p.ParamTemplate
}
func (p *SimDeleteMobileGatewayParam) SetParamTemplateFile(v string) {
	p.ParamTemplateFile = v
}

func (p *SimDeleteMobileGatewayParam) GetParamTemplateFile() string {
	return p.ParamTemplateFile
}
func (p *SimDeleteMobileGatewayParam) SetGenerateSkeleton(v bool) {
	p.GenerateSkeleton = v
}

func (p *SimDeleteMobileGatewayParam) GetGenerateSkeleton() bool {
	return p.GenerateSkeleton
}
func (p *SimDeleteMobileGatewayParam) SetId(v int64) {
	p.Id = v
}

func (p *SimDeleteMobileGatewayParam) GetId() int64 {
	return p.Id
}

// LogsMobileGatewayParam is input parameters for the sacloud API
type LogsMobileGatewayParam struct {
	Follow            bool     `json:"follow"`
	RefreshInterval   int64    `json:"refresh-interval"`
	Selector          []string `json:"selector"`
	ParamTemplate     string   `json:"param-template"`
	ParamTemplateFile string   `json:"param-template-file"`
	GenerateSkeleton  bool     `json:"generate-skeleton"`
	OutputType        string   `json:"output-type"`
	Column            []string `json:"column"`
	Quiet             bool     `json:"quiet"`
	Format            string   `json:"format"`
	FormatFile        string   `json:"format-file"`
	Query             string   `json:"query"`
	Id                int64    `json:"id"`
}

// NewLogsMobileGatewayParam return new LogsMobileGatewayParam
func NewLogsMobileGatewayParam() *LogsMobileGatewayParam {
	return &LogsMobileGatewayParam{

		RefreshInterval: 3,
	}
}

// FillValueToSkeleton fill values to empty fields
func (p *LogsMobileGatewayParam) FillValueToSkeleton() {
	if isEmpty(p.Follow) {
		p.Follow = false
	}
	if isEmpty(p.RefreshInterval) {
		p.RefreshInterval = 0
	}
	if isEmpty(p.Selector) {
		p.Selector = []string{""}
	}
	if isEmpty(p.ParamTemplate) {
		p.ParamTemplate = ""
	}
	if isEmpty(p.ParamTemplateFile) {
		p.ParamTemplateFile = ""
	}
	if isEmpty(p.GenerateSkeleton) {
		p.GenerateSkeleton = false
	}
	if isEmpty(p.OutputType) {
		p.OutputType = ""
	}
	if isEmpty(p.Column) {
		p.Column = []string{""}
	}
	if isEmpty(p.Quiet) {
		p.Quiet = false
	}
	if isEmpty(p.Format) {
		p.Format = ""
	}
	if isEmpty(p.FormatFile) {
		p.FormatFile = ""
	}
	if isEmpty(p.Query) {
		p.Query = ""
	}
	if isEmpty(p.Id) {
		p.Id = 0
	}

}

// Validate checks current values in model
func (p *LogsMobileGatewayParam) Validate() []error {
	errors := []error{}
	{
		validator := define.Resources["MobileGateway"].Commands["logs"].Params["refresh-interval"].ValidateFunc
		errs := validator("--refresh-interval", p.RefreshInterval)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		validator := validateSakuraID
		errs := validator("--id", p.Id)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	{
		validator := schema.ValidateInStrValues(define.AllowOutputTypes...)
		errs := validator("--output-type", p.OutputType)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		errs := validateInputOption(p)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}
	{
		errs := validateOutputOption(p)
		if errs != nil {
			errors = append(errors, errs...)
		}
	}

	return errors
}

func (p *LogsMobileGatewayParam) GetResourceDef() *schema.Resource {
	return define.Resources["MobileGateway"]
}

func (p *LogsMobileGatewayParam) GetCommandDef() *schema.Command {
	return p.GetResourceDef().Commands["logs"]
}

func (p *LogsMobileGatewayParam) GetIncludeFields() []string {
	return p.GetCommandDef().IncludeFields
}

func (p *LogsMobileGatewayParam) GetExcludeFields() []string {
	return p.GetCommandDef().ExcludeFields
}

func (p *LogsMobileGatewayParam) GetTableType() output.TableType {
	return p.GetCommandDef().TableType
}

func (p *LogsMobileGatewayParam) GetColumnDefs() []output.ColumnDef {
	return p.GetCommandDef().TableColumnDefines
}

func (p *LogsMobileGatewayParam) SetFollow(v bool) {
	p.Follow = v
}

func (p *LogsMobileGatewayParam) GetFollow() bool {
	return p.Follow
}
func (p *LogsMobileGatewayParam) SetRefreshInterval(v int64) {
	p.RefreshInterval = v
}

func (p *LogsMobileGatewayParam) GetRefreshInterval() int64 {
	return p.RefreshInterval
}
func (p *LogsMobileGatewayParam) SetSelector(v []string) {
	p.Selector = v
}

func (p *LogsMobileGatewayParam) GetSelector() []string {
	return p.Selector
}
func (p *LogsMobileGatewayParam) SetParamTemplate(v string) {
	p.ParamTemplate = v
}

func (p *LogsMobileGatewayParam) GetParamTemplate() string {
	return p.ParamTemplate
}
func (p *LogsMobileGatewayParam) SetParamTemplateFile(v string) {
	p.ParamTemplateFile = v
}

func (p *LogsMobileGatewayParam) GetParamTemplateFile() string {
	return p.ParamTemplateFile
}
func (p *LogsMobileGatewayParam) SetGenerateSkeleton(v bool) {
	p.GenerateSkeleton = v
}

func (p *LogsMobileGatewayParam) GetGenerateSkeleton() bool {
	return p.GenerateSkeleton
}
func (p *LogsMobileGatewayParam) SetOutputType(v string) {
	p.OutputType = v
}

func (p *LogsMobileGatewayParam) GetOutputType() string {
	return p.OutputType
}
func (p *LogsMobileGatewayParam) SetColumn(v []string) {
	p.Column = v
}

func (p *LogsMobileGatewayParam) GetColumn() []string {
	return p.Column
}
func (p *LogsMobileGatewayParam) SetQuiet(v bool) {
	p.Quiet = v
}

func (p *LogsMobileGatewayParam) GetQuiet() bool {
	return p.Quiet
}
func (p *LogsMobileGatewayParam) SetFormat(v string) {
	p.Format = v
}

func (p *LogsMobileGatewayParam) GetFormat() string {
	return p.Format
}
func (p *LogsMobileGatewayParam) SetFormatFile(v string) {
	p.FormatFile = v
}

func (p *LogsMobileGatewayParam) GetFormatFile() string {
	return p.FormatFile
}
func (p *LogsMobileGatewayParam) SetQuery(v string) {
	p.Query = v
}

func (p *LogsMobileGatewayParam) GetQuery() string {
	return p.Query
}
func (p *LogsMobileGatewayParam) SetId(v int64) {
	p.Id = v
}

func (p *LogsMobileGatewayParam) GetId() int64 {
	return p.Id
}
